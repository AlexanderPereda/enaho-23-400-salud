---
title: "04-eda"
output: html_document
---

```{r, include = FALSE}
require("knitr")
opts_chunk$set(echo = TRUE)
opts_knit$set(root.dir = "..")
```
# Cargar librerías necesarias

```{r}
library(dplyr)      
library(tidyr)      
library(ggplot2)    
library(patchwork)  
```

```{r}
#| label : funcion grafico_zona

# Crearemos un grafico de todas las posibles opciones de consulta para aquel que sintio malestar, dividido por zonas. El significado de cada variable puede ser revisado al inicio del documento.
grafico_zona <- function(data, region) {
  
  # Creamos un df filtrado
  datos_filtrados <- data |>
    select(zona, starts_with("p403")) |>
    filter(zona == region)  # Filtramos solo por la zona indicada
  
  # Contamos la frecuencia de cada valor 1 en las columnas p403
  frecuencia <- datos_filtrados |>
    pivot_longer(cols = starts_with("p403"), names_to = "Columna", values_to = "Valor") |>
    filter(Valor == 1) |>
    group_by(Columna) |>
    summarise(Cantidad = n(), .groups = 'drop')  # Contamos las ocurrencias de valor 1

  # Crear el gráfico de barras con color morado fijo
  ggplot(frecuencia, aes(x = Cantidad, y = Columna)) +
    geom_bar(stat = "identity", position = "dodge", fill = "#A456DB", show.legend = FALSE) +  # formato de las barras
    labs(title = region, x = "", y = "") +  # Título de la zona y ejes vacíos
    theme_minimal() +  # Usamos un tema minimalista
    theme(
      axis.ticks = element_blank(),
      axis.text.y = element_text(angle = 0, color = "white"),  # Texto en el eje Y en blanco
      plot.title = element_text(color = "white",  # Título en blanco
                                hjust = 0.5,  # Centrado
                                size = 16,  # Tamaño del título
                                face = "bold"),  # Título en negrita
      plot.background = element_rect(fill = "#222", color = "#222"),  # Fondo oscuro para el gráfico
      panel.background = element_rect(fill = "#222", color = "#222"),  # Fondo oscuro para el panel de barras
      axis.text = element_text(color = "white"),  # Texto de los ejes en blanco
      panel.grid.major = element_blank(),  # Elimina las líneas principales de la cuadrícula
      panel.grid.minor = element_line(color = "gray", linewidth = 0.25)  # Solo deja unas pocas líneas
    )
}
```

```{r}
#| label: crear graficos
#| 
datos_procesados <- readRDS("outputs/datos_procesados.rds")

# Crear gráficos para cada zona
grafico_norte <- grafico_zona(datos_procesados, "Norte")
grafico_sur <- grafico_zona(datos_procesados, "Sur")
grafico_centro <- grafico_zona(datos_procesados, "Centro")
grafico_oriente <- grafico_zona(datos_procesados, "Oriente")
```

```{r}
#| label: uniendo graficos

# Combinar los gráficos en un solo lienzo usando patchwork
grafico_zonas <- grafico_norte + grafico_sur + grafico_centro + grafico_oriente + 
  plot_layout(ncol = 2) 

ggsave(file.path("outputs","grafico_preferencias.png"), plot = grafico_zonas, width = 10, height = 8, dpi = 300)
```

```{r}

conteo_variables <- datos_procesados |>
  pivot_longer(cols = c(p40314, p40310, p4031), 
               names_to = "variable", 
               values_to = "valor") |>
  filter(valor == 1) |>
  group_by(variable) |>
  summarise(conteo = n(), 
            porcentaje = (n() / nrow(datos_procesados)) * 100, 
            .groups = 'drop')

# Reemplazar los nombres de las variables por etiquetas descriptivas
conteo_variables <- conteo_variables |>
  mutate(variable = case_when(
    variable == "p40314" ~ "No busco atención",
    variable == "p40310" ~ "Botica o farmacia",
    variable == "p4031" ~ "Puesto de salud Minsa",
    TRUE ~ variable
  ))

saveRDS(conteo_variables, file.path("outputs","conteo_variables.rds"))

```

```{r}
barras <- ggplot(conteo_variables, aes(x = reorder(variable, conteo), y = conteo, fill = porcentaje)) +
  geom_bar(stat = "identity") +
  scale_fill_gradient(low = "#C7B1CF", high = "#A857D1") +
  geom_text(aes(label = paste0(round(porcentaje, 1), "%")), 
            vjust = -0.5, color = "white", size = 7) +
  labs(title = "",
       x = "",
       y = "Conteo",
       fill = "Porcentaje") +
  theme_minimal() +
  theme(
    axis.text = element_text(color = "white"),       # Textos de los ejes
    axis.title = element_text(color = "white"),      # Títulos de los ejes
    axis.text.x = element_text(size = 16),           # eje x textos mas grandes
    plot.title = element_text(color = "white", hjust = 0.5, size = 16, face = "bold"),  # Título del gráfico
    legend.title = element_text(color = "white"),    # Título de la leyenda
    legend.text = element_text(color = "white"),     # Texto de la leyenda
    plot.background = element_rect(fill = "#222", color = "#222"),  # Fondo oscuro
    panel.background = element_rect(fill = "#222", color = "#222"),  # Fondo del panel de barras
    panel.grid.major = element_blank(),  # Elimina las líneas principales de la cuadrícula
    panel.grid.minor = element_line(color = "gray", linewidth = 0.25)  # Solo deja unas pocas líneas
  )

ggsave(file.path("outputs","barras.png"), plot = barras, width = 10, height = 8, dpi = 300)  
```